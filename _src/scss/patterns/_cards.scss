// Cards
// =====

[data-layout='card-groups'] {
  margin: size('gutter') 0;
}

[data-layout='cards'] {
  display: grid;
  font-size: size('small');
  grid-gap: size('3q-shim');
  grid-template-columns: var-grid('cards');
  list-style: none;
  padding: 0 size('shim') 0 size('half-shim');
}

// Groups
// ------

[data-card-group] {
  display: grid;
  grid-template: 'grouper list' auto / auto minmax(0, 1fr);
  margin-bottom: size('gutter');
}

[data-card-group='coming'] {
  &:not(:last-child) {
    @include after('— & & & —') {
      @include font-family('amp');
      color: var-color('border');
      grid-column: 1 / -1;
      margin: size('gutter') auto 0;
      text-align: center;
    }
  }
}

[data-cards='grouper'] {
  @include font-family('code');
  font-size: size('xsmall');
  grid-area: grouper;
  padding: size('shim') 0;
  writing-mode: vertical-rl;
}

// i=Items
// -----

[data-card='item'] {
  --feature: -0.006turn;
  display: grid;
  grid-template: minmax(0, 1fr) / minmax(0, 1fr);

  @for $i from 2 through 4 {
    &:nth-child(#{$i}n) {
      $random: random(5) + 2;
      $random: if(random(2) == 2, 0 - $random, $random);
      --feature: #{$random / 1000 * 1turn};
    }
  }

  &[data-feature] {
    background: pattern('feature');
    margin: negative('quarter-shim');
    padding: size('quarter-shim');
  }
}

[data-card='inner'] {
  background: var-color('callout');
  padding: size('half-shim') size('3q-shim');

  [data-feature] & {
    background: var-color('background');
    border: 1px solid var-color('action');
    transform: rotate(var(--feature, -0.006turn));
  }
}

// Content
// -------

[data-card='title'] {
  font-style: italic;
}

[data-card='meta'] {
  @include color--('action', 'text-light');
  @include color--('action-underline', 'border');
  @include font-family('code');
  color: var-color('border');
  font-size: size('xsmall');
  overflow: hidden;
  padding-bottom: size('quarter-shim');
  text-overflow: ellipsis;
  white-space: nowrap;
}
