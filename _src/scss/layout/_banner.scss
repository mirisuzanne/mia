// Banner Layout
// =============

[data-layout~='banner'] {
  display: grid;
  font-style: italic;
  grid: 'icon .' auto 'head head' 1fr / auto 1fr;
  grid-area: banner / full;
  margin-bottom: size('gutter');

  &:not([data-home]) {
    --mia-svg-animate: none;
  }
}

.banner-home {
  #{$link} {
    @include transition('home-icon');
    --offset: calc(100% - #{size('gutter')});
    --top: var(--offset) 0;
    --angle: 100% var(--offset);
    --left: 0 100%;
    background: var-color('action');
    clip-path: polygon(0 0, var(--top), var(--angle), var(--left));
    color: var-color('background');
    grid-area: icon;
    padding: size('shim') size('shim') size('gutter') 0;
  }

  #{$focus} {
    --top: 100% 0;
    --angle: var(--offset) 100%;
    --left: 0 var(--offset);
    background: var-color('action-hover');
  }
}

.banner-content {
  align-self: center;
  display: grid;
  grid-area: icon / head / head;
  justify-self: center;
  margin: size('shim');
  text-align: center;
  transform: rotate(-13deg);

  @include above('page-break') {
    margin: size('spacer') size('shim');
  }
}

.banner-title {
  background: var-color('overlay');
  color: var-color('text-highlight');
  line-height: 0.9;
  margin-bottom: negative('gutter-plus');
  padding: size('gutter') size('gutter') size('gutter') size('shim');
}

.subtitle {
  @include font-family('code');
  background: var-color('overlay');
  color: var-color('text-light');
  font-size: size('small');
}

// Dots
// ====

.banner-fancy {
  align-items: center;
  display: grid;
  justify-items: center;
  grid-area: 1 / 1 / -1 / -1;
  padding-bottom: size('gutter');
  position: relative;
  z-index: -1;
}

[data-dot] {
  @include square(calc(6px + 1vmin));
  --dot: var(--dot-color-6);
  --opacity: #{(random(30) + 10) / 100};
  background: var(--dot);
  border-radius: 100%;
  fill: var(--dot);
  grid-area: var(--area);
  opacity: var(--opacity);
  transform: scale(var(--scale));

  $dot-color-options: join(map-keys($main-shades), map-keys($accent-shades));
  $dot-color-length: length($dot-color-options);

  @for $i from 1 through 6 {
    $color: nth($dot-color-options, random($dot-color-length));
    --dot-color-#{$i}: #{var-color($color)};
  }
}

[data-dot='1'] {
  --dot: var(--dot-color-1);
}

[data-dot='2'] {
  --dot: var(--dot-color-2);
}

[data-dot='3'] {
  --dot: var(--dot-color-3);
}

[data-dot='4'] {
  --dot: var(--dot-color-4);
}

[data-dot='5'] {
  --dot: var(--dot-color-5);
}

// Blip
// ----

@keyframes blip {
  12%,
  37%,
  95% {
    opacity: 0;
  }

  21%,
  40%,
  63% {
    opacity: 1;
  }
}
