@use '../tools';
@use 'sass:math';
@use 'sass:list';
@use 'sass:string';

$count: 4, 6, 8;
$colors: ();

html {
  @each $hue in ('prime', 'accent') {
    @for $i from 1 through 3 {
      $name: string.unquote('--#{$hue}-dots-#{$i}');
      #{$name}: var(--ccs-h--#{$hue})
        var(--ccs-s--bg#{$i})
        var(--ccs-l--bg#{$i});
      $colors: list.append($colors, $name) !global;
    }
  }
}

$small: ();
$medium: ();
$large: ();

@for $i from 1 through list.nth($count, -1) {
  $x: math.random(100) * 1vw;
  $y: math.random(100) * 1vh;
  $r: math.random(15) + 5vmin;
  $color: list.nth($colors, math.random(list.length($colors)));
  $grad: radial-gradient(
    circle at $x $y,
    hsl(var($color) / #{2% + math.random(5)}) $r,
    transparent calc(#{$r} + 2px)
  );
  $small: if(
    $i > list.nth($count, 1),
    $small,
    list.append($small, $grad, 'comma')
  );
  $medium: if(
    $i > list.nth($count, 2),
    $medium,
    list.append($medium, fixed $grad, 'comma')
  );
  $large: list.append($large, fixed $grad, 'comma');
}

body {
  background: var(--circles, $small);
  background-repeat: no-repeat;

  @include tools.above('medium') {
    --circles: #{$medium};
  }

  @include tools.above('wide') {
    --circles: #{$large};
  }
}
